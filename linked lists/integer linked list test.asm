; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30723.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG4459	DB	0aH, 'Found 2 in list.', 00H
	ORG $+6
$SG4461	DB	0aH, 'Not found 2 in list.', 00H
	ORG $+2
$SG4463	DB	0aH, 'Found 4 in list.', 00H
	ORG $+6
$SG4465	DB	0aH, 'Not found 4 in list.', 00H
	ORG $+2
$SG4468	DB	0aH, 'Deleted first 2.', 00H
	ORG $+6
$SG4470	DB	0aH, 'Deleted first 4.', 00H
	ORG $+6
$SG4472	DB	0aH, '4 Not found.', 00H
	ORG $+2
$SG4474	DB	0aH, 'Deleted first 1.', 00H
	ORG $+6
$SG4476	DB	0aH, '1 Not found.', 00H
	ORG $+2
$SG4480	DB	0aH, 'All 2s deleted from list.', 00H
	ORG $+5
$SG4482	DB	0aH, '2 not found.', 00H
	ORG $+2
$SG4484	DB	'Circular list test: list should not be circular.', 00H
	ORG $+7
$SG4486	DB	0aH, 'list is circular.', 00H
	ORG $+5
$SG4488	DB	0aH, 'list is not circular.', 00H
	ORG $+1
$SG4489	DB	0aH, 'Circular list test: list should be circular.', 00H
	ORG $+2
$SG4491	DB	0aH, 'list is circular.', 0aH, 00H
	ORG $+4
$SG4493	DB	0aH, 'list is not circular.', 0aH, 00H
_DATA	ENDS
PUBLIC	TEST_setup1
PUBLIC	TEST_search1
PUBLIC	TEST_delete1
PUBLIC	TEST_delete2
PUBLIC	TEST_circular_list
EXTRN	printf:PROC
EXTRN	add_to_list:PROC
EXTRN	make_list_circular:PROC
EXTRN	print_list:PROC
EXTRN	search_list:PROC
EXTRN	delete_first_value_matching_node:PROC
EXTRN	delete_all_value_matching_nodes:PROC
EXTRN	is_list_circular:PROC
pdata	SEGMENT
$pdata$TEST_setup1 DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$TEST_setup1
$pdata$TEST_search1 DD imagerel $LN7
	DD	imagerel $LN7+95
	DD	imagerel $unwind$TEST_search1
$pdata$TEST_delete1 DD imagerel $LN8
	DD	imagerel $LN8+149
	DD	imagerel $unwind$TEST_delete1
$pdata$TEST_delete2 DD imagerel $LN5
	DD	imagerel $LN5+57
	DD	imagerel $unwind$TEST_delete2
$pdata$TEST_circular_list DD imagerel $LN7
	DD	imagerel $LN7+129
	DD	imagerel $unwind$TEST_circular_list
pdata	ENDS
xdata	SEGMENT
$unwind$TEST_setup1 DD 010401H
	DD	04204H
$unwind$TEST_search1 DD 010401H
	DD	04204H
$unwind$TEST_delete1 DD 010401H
	DD	04204H
$unwind$TEST_delete2 DD 010401H
	DD	04204H
$unwind$TEST_circular_list DD 010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
TEST_circular_list PROC
; File c:\src\blog posts\linked lists\integer linked list test.c
; Line 60
$LN7:
	sub	rsp, 40					; 00000028H
; Line 61
	call	TEST_setup1
; Line 62
	call	print_list
; Line 63
	lea	rcx, OFFSET FLAT:$SG4484
	call	printf
; Line 64
	call	is_list_circular
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@TEST_circu
; Line 65
	lea	rcx, OFFSET FLAT:$SG4486
	call	printf
; Line 67
	jmp	SHORT $LN3@TEST_circu
$LN4@TEST_circu:
; Line 68
	lea	rcx, OFFSET FLAT:$SG4488
	call	printf
$LN3@TEST_circu:
; Line 70
	call	make_list_circular
; Line 71
	lea	rcx, OFFSET FLAT:$SG4489
	call	printf
; Line 72
	call	print_list
; Line 73
	call	is_list_circular
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@TEST_circu
; Line 74
	lea	rcx, OFFSET FLAT:$SG4491
	call	printf
; Line 76
	jmp	SHORT $LN1@TEST_circu
$LN2@TEST_circu:
; Line 77
	lea	rcx, OFFSET FLAT:$SG4493
	call	printf
$LN1@TEST_circu:
; Line 80
	add	rsp, 40					; 00000028H
	ret	0
TEST_circular_list ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
TEST_delete2 PROC
; File c:\src\blog posts\linked lists\integer linked list test.c
; Line 50
$LN5:
	sub	rsp, 40					; 00000028H
; Line 51
	mov	ecx, 2
	call	delete_all_value_matching_nodes
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@TEST_delet
; Line 52
	lea	rcx, OFFSET FLAT:$SG4480
	call	printf
; Line 54
	jmp	SHORT $LN1@TEST_delet
$LN2@TEST_delet:
; Line 55
	lea	rcx, OFFSET FLAT:$SG4482
	call	printf
$LN1@TEST_delet:
; Line 57
	call	print_list
; Line 58
	add	rsp, 40					; 00000028H
	ret	0
TEST_delete2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
TEST_delete1 PROC
; File c:\src\blog posts\linked lists\integer linked list test.c
; Line 18
$LN8:
	sub	rsp, 40					; 00000028H
; Line 19
	mov	ecx, 2
	call	delete_first_value_matching_node
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@TEST_delet
; Line 20
	lea	rcx, OFFSET FLAT:$SG4468
	call	printf
; Line 21
	call	print_list
$LN5@TEST_delet:
; Line 23
	mov	ecx, 4
	call	delete_first_value_matching_node
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@TEST_delet
; Line 24
	lea	rcx, OFFSET FLAT:$SG4470
	call	printf
; Line 25
	call	print_list
; Line 27
	jmp	SHORT $LN3@TEST_delet
$LN4@TEST_delet:
; Line 28
	lea	rcx, OFFSET FLAT:$SG4472
	call	printf
; Line 29
	call	print_list
$LN3@TEST_delet:
; Line 31
	mov	ecx, 1
	call	delete_first_value_matching_node
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@TEST_delet
; Line 32
	lea	rcx, OFFSET FLAT:$SG4474
	call	printf
; Line 33
	call	print_list
; Line 35
	jmp	SHORT $LN1@TEST_delet
$LN2@TEST_delet:
; Line 36
	lea	rcx, OFFSET FLAT:$SG4476
	call	printf
; Line 37
	call	print_list
$LN1@TEST_delet:
; Line 39
	add	rsp, 40					; 00000028H
	ret	0
TEST_delete1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
TEST_search1 PROC
; File c:\src\blog posts\linked lists\integer linked list test.c
; Line 3
$LN7:
	sub	rsp, 40					; 00000028H
; Line 4
	mov	ecx, 2
	call	search_list
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@TEST_searc
; Line 5
	lea	rcx, OFFSET FLAT:$SG4459
	call	printf
; Line 7
	jmp	SHORT $LN3@TEST_searc
$LN4@TEST_searc:
; Line 8
	lea	rcx, OFFSET FLAT:$SG4461
	call	printf
$LN3@TEST_searc:
; Line 10
	mov	ecx, 4
	call	search_list
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@TEST_searc
; Line 11
	lea	rcx, OFFSET FLAT:$SG4463
	call	printf
; Line 13
	jmp	SHORT $LN1@TEST_searc
$LN2@TEST_searc:
; Line 14
	lea	rcx, OFFSET FLAT:$SG4465
	call	printf
$LN1@TEST_searc:
; Line 16
	add	rsp, 40					; 00000028H
	ret	0
TEST_search1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
TEST_setup1 PROC
; File c:\src\blog posts\linked lists\integer linked list test.c
; Line 41
$LN3:
	sub	rsp, 40					; 00000028H
; Line 42
	xor	edx, edx
	mov	ecx, 1
	call	add_to_list
; Line 43
	xor	edx, edx
	mov	ecx, 2
	call	add_to_list
; Line 44
	xor	edx, edx
	mov	ecx, 3
	call	add_to_list
; Line 45
	mov	dl, 1
	mov	ecx, 8
	call	add_to_list
; Line 46
	xor	edx, edx
	mov	ecx, 2
	call	add_to_list
; Line 47
	call	print_list
; Line 48
	add	rsp, 40					; 00000028H
	ret	0
TEST_setup1 ENDP
_TEXT	ENDS
END
